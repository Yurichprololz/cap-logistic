_schema-version: "3.1"
ID: cap-logistic
description: A simple CAP project.
version: 1.0.0
modules:
- name: cap-logistic-srv
  type: nodejs
  path: gen/srv
  requires:
  - name: cap-logistic-db
  - name: dest_service
  provides:
  - name: srv-api
    properties:
      srv-url: ${default-url}
  parameters:
    buildpack: nodejs_buildpack
  build-parameters:
    builder: npm-ci
- name: cap-logistic-app-content
  type: com.sap.application.content
  path: .
  requires:
  - name: cap-logistic-repo-host
    parameters:
      content-target: true
  build-parameters:
    build-result: resources
    requires:
    - artifacts:
      - uidriver.zip
      name: uidriver
      target-path: resources/
    - artifacts:
      - uicar.zip
      name: uicar
      target-path: resources/
    - artifacts:
      - uigood.zip
      name: uigood
      target-path: resources/
- name: uidriver
  type: html5
  path: app/ui.driver
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []
- name: uicar
  type: html5
  path: app/ui.car
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []
- name: uigood
  type: html5
  path: app/ui.good
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []
- name: cap-logistic-destination-content
  type: com.sap.application.content
  requires:
  - name: cap-logistic-destination-service
    parameters:
      content-target: true
  - name: cap-logistic-repo-host
    parameters:
      service-key:
        name: cap-logistic-repo-host-key
  - name: uaa_cap-logistic
    parameters:
      service-key:
        name: uaa_cap-logistic-key
  - name: srv-api
  parameters:
    content:
      instance:
        destinations:
        - Authentication: OAuth2UserTokenExchange
          Name: cap-logistic-app-srv
          TokenServiceInstanceName: cap-logistic-xsuaa-service
          TokenServiceKeyName: uaa_cap-logistic-key
          URL: ~{srv-api/srv-url}
          sap.cloud.service: cap-logistic
        - Name: cap_logistic_cap_logistic_repo_host
          ServiceInstanceName: cap-logistic-html5-srv
          ServiceKeyName: cap-logistic-repo-host-key
          sap.cloud.service: cap-logistic
        - Authentication: OAuth2UserTokenExchange
          Name: cap_logistic_uaa_cap_logistic
          ServiceInstanceName: cap-logistic-xsuaa-service
          ServiceKeyName: uaa_cap-logistic-key
          sap.cloud.service: cap-logistic
        existing_destinations_policy: ignore
  build-parameters:
    no-source: true
- name: cap-logistic-db-deployer
  type: hdb
  path: db
  requires:
  - name: cap-logistic-db
    properties:
      TARGET_CONTAINER: ~{hdi-container-name}
  parameters:
    buildpack: nodejs_buildpack
resources:
- name: cap-logistic-repo-host
  type: org.cloudfoundry.managed-service
  parameters:
    service: html5-apps-repo
    service-name: cap-logistic-html5-srv
    service-plan: app-host
- name: cap-logistic-destination-service
  type: org.cloudfoundry.managed-service
  parameters:
    config:
      HTML5Runtime_enabled: true
      init_data:
        instance:
          destinations:
          - Authentication: NoAuthentication
            Name: ui5
            ProxyType: Internet
            Type: HTTP
            URL: https://ui5.sap.com
          existing_destinations_policy: update
      version: 1.0.0
    service: destination
    service-name: cap-logistic-destination-service
    service-plan: lite
- name: uaa_cap-logistic
  type: org.cloudfoundry.managed-service
  parameters:
    path: ./xs-security.json
    service: xsuaa
    service-name: cap-logistic-xsuaa-service
    service-plan: application
- name: cap-logistic-db
  type: com.sap.xs.hdi-container
  parameters:
    service: hana
    service-plan: hdi-shared
  properties:
    hdi-container-name: ${service-name}
- name: dest_service
  type: org.cloudfoundry.existing-service
  parameters:
    service-plan: lite
    service: destination
parameters:
  deploy_mode: html5-repo
  enable-parallel-deployments: true
build-parameters:
  before-all:
  - builder: custom
    commands:
    - npx -p @sap/cds-dk cds build --production
